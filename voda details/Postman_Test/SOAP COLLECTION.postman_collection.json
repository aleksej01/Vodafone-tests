{
	"info": {
		"_postman_id": "e7d1cb54-6b76-4e89-b61e-d3e2a4ae6a73",
		"name": "SOAP COLLECTION",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://jsonplaceholder.typicode.com/todos/1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fd11c6a7-01b3-4c9f-8b3b-b4bf8dfcecd9",
						"type": "text/javascript",
						"exec": [
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0917a15b-586b-4cb5-a3aa-94c428ad0015",
						"type": "text/javascript",
						"exec": [
							"",
							"// response body in var object",
							"var jsonData = pm.response.json();",
							"",
							"// This test is to check if node named \"title\" exists",
							"tests[\"test1: title found\"] = pm.expect(jsonData).to.have.property('title');",
							"",
							"// This test is to check if node \"title\" value matches to \"delectus aut autem\"",
							"tests[\"test2: title character match test\"] = pm.expect(jsonData.title).to.eql(\"delectus aut autem\");",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/todos/1",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"todos",
						"1"
					]
				}
			},
			"response": []
		}
	]
}